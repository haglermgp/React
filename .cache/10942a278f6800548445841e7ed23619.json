{"dependencies":[{"name":"/home/hagler/Projects/React/.babelrc","includedInParent":true,"mtime":1520912726835},{"name":"/home/hagler/Projects/React/package.json","includedInParent":true,"mtime":1520912625886},{"name":"redux","loc":{"line":4,"column":32}},{"name":"./todos","loc":{"line":5,"column":18}},{"name":"./visibilityFilter","loc":{"line":6,"column":29}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _redux = require('redux');\n\nvar _todos = require('./todos');\n\nvar _todos2 = _interopRequireDefault(_todos);\n\nvar _visibilityFilter = require('./visibilityFilter');\n\nvar _visibilityFilter2 = _interopRequireDefault(_visibilityFilter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import * as reducers from './reducers'\n\n\nvar todoApp = (0, _redux.combineReducers)({\n\ttodos: _todos2.default,\n\tvisibilityFilter: _visibilityFilter2.default\n});\n\n// expor default todoApp = (state = {}, action) => {\n// \treturn {\n// \t\tvisibilityFilter: visibilityFilter(state.visibilityFilter, action),\n// \t\ttodos: todos(state.todos, action)\n// \t}\n// }\n\n// REDUCERS SPECIFY HOW THE STATE APPLICATIONS CHANGE IN RESPONSE TO ACTIONS THAT SEND TO THE STORE\n\n// The reducre is a pure function that takes the previous state and action, and return the next state\nexports.default = todoApp;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"src/reducers/index.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"src/reducers/index.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"src/reducers/index.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"src/reducers/index.js","original":{"line":7,"column":0}},{"generated":{"line":22,"column":0},"source":"src/reducers/index.js","original":{"line":10,"column":0}},{"name":"todoApp","generated":{"line":22,"column":4},"source":"src/reducers/index.js","original":{"line":10,"column":6}},{"generated":{"line":22,"column":14},"source":"src/reducers/index.js","original":{"line":10,"column":16}},{"generated":{"line":22,"column":42},"source":"src/reducers/index.js","original":{"line":10,"column":32}},{"name":"todos","generated":{"line":23,"column":0},"source":"src/reducers/index.js","original":{"line":11,"column":1}},{"generated":{"line":23,"column":23},"source":"src/reducers/index.js","original":{"line":10,"column":32}},{"name":"visibilityFilter","generated":{"line":24,"column":0},"source":"src/reducers/index.js","original":{"line":12,"column":1}},{"generated":{"line":25,"column":0},"source":"src/reducers/index.js","original":{"line":10,"column":32}},{"generated":{"line":25,"column":1},"source":"src/reducers/index.js","original":{"line":10,"column":16}},{"generated":{"line":25,"column":2},"source":"src/reducers/index.js","original":{"line":10,"column":0}},{"generated":{"line":27,"column":0},"source":"src/reducers/index.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"src/reducers/index.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"src/reducers/index.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"src/reducers/index.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"src/reducers/index.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"src/reducers/index.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":0},"source":"src/reducers/index.js","original":{"line":1,"column":0}},{"generated":{"line":36,"column":0},"source":"src/reducers/index.js","original":{"line":3,"column":0}},{"name":"todoApp","generated":{"line":37,"column":18},"source":"src/reducers/index.js","original":{"line":22,"column":15}}],"sources":{"src/reducers/index.js":"// REDUCERS SPECIFY HOW THE STATE APPLICATIONS CHANGE IN RESPONSE TO ACTIONS THAT SEND TO THE STORE\n\n// The reducre is a pure function that takes the previous state and action, and return the next state\nimport { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n// import * as reducers from './reducers'\n\n\nconst todoApp = combineReducers({\n\ttodos,\n\tvisibilityFilter\n})\n\n// expor default todoApp = (state = {}, action) => {\n// \treturn {\n// \t\tvisibilityFilter: visibilityFilter(state.visibilityFilter, action),\n// \t\ttodos: todos(state.todos, action)\n// \t}\n// }\n\nexport default todoApp"},"lineCount":null}},"hash":"85739f41894acd508857b014bceb26ca","cacheData":{"env":{}}}